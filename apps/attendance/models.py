from django.db import models
from django.utils.translation import gettext_lazy as _
from apps.groups.models import Session
from apps.participants.models import PersonProfile
from apps.accounts.models import User


class Attendance(models.Model):
    class TrustLevel(models.TextChoices):
        TRUSTED = "trusted", _("–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–π")
        SUSPICIOUS = "suspicious", _("–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π")
        BLOCKED = "blocked", _("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

    session = models.ForeignKey(
        Session,
        on_delete=models.CASCADE,
        related_name="attendances",
        verbose_name=_("–°–µ—Å—Å–∏—è"),
    )
    profile = models.ForeignKey(
        PersonProfile,
        on_delete=models.CASCADE,
        related_name="attendances",
        verbose_name=_("–ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"),
    )

    # ‚è±Ô∏è –í—Ä–µ–º—è –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞
    arrived_at = models.DateTimeField(_("–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞"), null=True, blank=True)
    left_at = models.DateTimeField(_("–í—Ä–µ–º—è —É—Ö–æ–¥–∞"), null=True, blank=True)

    # üß† –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –±—Ä–∞—É–∑–µ—Ä—É
    fingerprint_hash = models.CharField(
        _("–•—ç—à –±—Ä–∞—É–∑–µ—Ä–∞"), max_length=64, blank=True, null=True
    )
    trust_level = models.CharField(
        _("–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è"),
        max_length=20,
        choices=TrustLevel.choices,
        default=TrustLevel.TRUSTED,
    )
    trust_score = models.PositiveSmallIntegerField(
        _("–ë–∞–ª–ª—ã –¥–æ–≤–µ—Ä–∏—è"), default=100
    )

    # üßç –û—Ç–º–µ—Ç–∫–∞ –≤—Ä—É—á–Ω—É—é —Ç—Ä–µ–Ω–µ—Ä–æ–º
    marked_by_trainer = models.ForeignKey(
        User,
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        verbose_name=_("–û—Ç–º–µ—Ç–∏–ª —Ç—Ä–µ–Ω–µ—Ä"),
        related_name="manual_attendances",
    )

    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        verbose_name = _("–û—Ç–º–µ—Ç–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è")
        verbose_name_plural = _("–û—Ç–º–µ—Ç–∫–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è")
        unique_together = ("session", "profile")
        indexes = [
            models.Index(fields=["session", "profile"]),
            models.Index(fields=["fingerprint_hash"]),
        ]
        ordering = ["-arrived_at"]

    def __str__(self):
        return f"{self.profile.full_name} ‚Üí {self.session.date} ({self.trust_level})"

    def is_present(self):
        return bool(self.arrived_at)

    def is_left(self):
        return bool(self.left_at)


class TrustLog(models.Model):
    fingerprint = models.ForeignKey(
        "participants.BrowserFingerprint",
        on_delete=models.CASCADE,
        related_name="trust_logs",
        verbose_name=_("–û—Ç–ø–µ—á–∞—Ç–æ–∫"),
        null=True,
        blank=True,
    )
    attendance = models.ForeignKey(
        "attendance.Attendance",
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        verbose_name=_("–°–≤—è–∑–∞–Ω–Ω–∞—è –æ—Ç–º–µ—Ç–∫–∞"),
    )
    reason = models.CharField(_("–ü—Ä–∏—á–∏–Ω–∞"), max_length=255)
    delta = models.SmallIntegerField(_("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –¥–æ–≤–µ—Ä–∏—è"))  # –Ω–∞–ø—Ä. -20
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        verbose_name = _("–õ–æ–≥ –¥–æ–≤–µ—Ä–∏—è")
        verbose_name_plural = _("–õ–æ–≥–∏ –¥–æ–≤–µ—Ä–∏—è")
        ordering = ["-created_at"]

    def __str__(self):
        return f"{self.created_at} ‚Äî {self.reason} ({self.delta})"
