from django.core.management.base import BaseCommand
from apps.core.models import APIToken


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--name',
            type=str,
            default='Test Token (Development)',
            help='–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞'
        )
        parser.add_argument(
            '--permissions',
            type=str,
            default='read_write',
            choices=['read_only', 'read_write', 'admin'],
            help='–£—Ä–æ–≤–µ–Ω—å –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞'
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
        )

    def handle(self, *args, **options):
        name = options['name']
        permissions = options['permissions']
        force = options['force']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–æ–∫–µ–Ω —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        existing_token = APIToken.objects.filter(name=name).first()
        
        if existing_token and not force:
            self.stdout.write(
                self.style.WARNING(
                    f'–¢–æ–∫–µ–Ω "{name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n'
                    f'–¢–æ–∫–µ–Ω: {existing_token.key}\n'
                    f'–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è.'
                )
            )
            return
        
        if existing_token and force:
            existing_token.delete()
            self.stdout.write(
                self.style.WARNING(f'–£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω "{name}"')
            )
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        try:
            token = APIToken.objects.create(
                name=name,
                permissions=permissions
            )
            
            self.stdout.write(
                self.style.SUCCESS(
                    f'‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n'
                    f'–ò–º—è: {token.name}\n'
                    f'–ü—Ä–∞–≤–∞: {token.permissions}\n'
                    f'–¢–æ–∫–µ–Ω: {token.key}\n\n'
                    f'üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ test_groups_api.py:\n'
                    f'API_TOKEN = \'{token.key}\'\n\n'
                    f'–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:\n'
                    f'export API_TOKEN={token.key}'
                )
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}')
            ) 